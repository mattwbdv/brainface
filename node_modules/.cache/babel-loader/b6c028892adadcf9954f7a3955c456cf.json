{"ast":null,"code":"var _jsxFileName = \"/Users/mattkoenig/Development/brainface/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n});\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBoxing = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }, () => {\n        app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n          if (response) {\n            fetch('http:localhost:3001/image', {\n              method: 'put',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            }).then(response => response.json()).then(count => {\n              this.setState({\n                user: {\n                  entries: count\n                }\n              });\n            });\n          }\n\n          this.displayFaceBoxing(this.calculateFaceLocation(response));\n        }).catch(err => console.log(err));\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mattkoenig/Development/brainface/src/App.js"],"names":["React","Component","Navigation","Logo","FaceRecognition","Rank","ImageLinkForm","Particles","Clarifai","Signin","Register","app","App","apiKey","particlesOptions","polygon","enable","type","move","radius","url","constructor","loadUser","data","setState","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBoxing","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","user","json","count","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\n\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n });\n\n\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}, \n      route: 'signin', \n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBoxing = (box) => {\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) => {  \n    this.setState({input: event.target.value});\n\n  }\n\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input}, () => {\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response =>  {\n        if(response) {\n          fetch('http:localhost:3001/image', {\n            method: 'put', \n            headers: {'Content-Type': 'application/json'}, \n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState({user: {\n              entries: count\n            }})\n          })\n        }\n        this.displayFaceBoxing(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  })\n  \n\n}\n\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\nrender() {\n  const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n       <Particles className='particles'\n        params={particlesOptions}\n      />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home'\n        ? <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        : (\n           route === 'signin'\n           ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n           : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n      }\n    </div>\n  );\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}