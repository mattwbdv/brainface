{"ast":null,"code":"var _jsxFileName = \"/Users/mattkoenig/Development/brainface/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n});\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBoxing = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }, () => {\n        app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBoxing(this.calculateFaceLocation(response))).catch(err => console.log(err));\n      });\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin'\n    };\n  }\n\n  render() {\n    const imageUrl = this.state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particlesOptions\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.route === 'Signin' ? React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mattkoenig/Development/brainface/src/App.js"],"names":["React","Component","Navigation","Logo","FaceRecognition","Rank","ImageLinkForm","Particles","Clarifai","Signin","app","App","apiKey","particlesOptions","polygon","enable","type","move","radius","url","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBoxing","box","console","log","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\n\n\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n });\n\n\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}, \n      route: 'Signin'\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBoxing = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) => {  \n    this.setState({input: event.target.value});\n\n  }\n\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input}, () => {\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response =>  this.displayFaceBoxing(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err))\n  })\n  \n\n}\n\n\nonRouteChange = (route) => {\n    this.setState({route: route});\n}\n\n  render() {\n\n    const { imageUrl } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={{ particlesOptions }} />\n        <Navigation onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'Signin' \n        ? <Signin onRouteChange={this.onRouteChange}/>\n        : <div>\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition box={this.state.box} imageUrl={imageUrl}/> \n        </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}