{"ast":null,"code":"var _jsxFileName = \"/Users/mattkoenig/Development/brainface/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { callbackify } from 'util';\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n});\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      // this.setState({imageUrl: this.state.intput})\n      this.setState((prevState, props) => {\n        return {\n          imageUrl: this.state.intput\n        };\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    const imageUrl = this.state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particlesOptions\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mattkoenig/Development/brainface/src/App.js"],"names":["React","Component","Navigation","Logo","FaceRecognition","Rank","ImageLinkForm","Particles","Clarifai","callbackify","app","App","apiKey","particlesOptions","polygon","enable","type","move","radius","url","constructor","calculateFaceLocation","data","clarifaiFace","response","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","value","onButtonSubmit","prevState","props","imageUrl","state","intput","models","predict","FACE_DETECT_MODEL","then","catch","err","box","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,MAAMC,GAAG,GAAG,IAAIF,QAAQ,CAACG,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAKA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,IADD;AAEPC,IAAAA,IAAI,EAAE,QAFC;AAGPC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KAHC;AAMPC,IAAAA,GAAG,EAAE;AANE;AADc,CAAzB;;AAWA,MAAMR,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BmB,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,qBATc,GASWC,IAAD,IAAU;AAChC,YAAMC,YAAY,GAAGD,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,CAAtB,EAAyBH,IAAzB,CAA8BI,OAA9B,CAAsC,CAAtC,EAAyCC,WAAzC,CAAqDC,YAA1E;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBE,MAAnB;AAED,KAhBa;;AAAA,SAmBdG,aAnBc,GAmBGC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AAED,KAtBa;;AAAA,SA0BdC,cA1Bc,GA0BG,MAAM;AACrB;AAEA,WAAKJ,QAAL,CACE,CAACK,SAAD,EAAWC,KAAX,KAAmB;AACf,eAAO;AAACC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AAAtB,SAAP;AACF,OAHJ;AAMAtC,MAAAA,GAAG,CAACuC,MAAJ,CAAWC,OAAX,CAAmB1C,QAAQ,CAAC2C,iBAA5B,EAA+C,KAAKJ,KAAL,CAAWP,KAA1D,EACCY,IADD,CACM5B,QAAQ,IAAK,KAAKH,qBAAL,CAA2BG,QAA3B,CADnB,EAEC6B,KAFD,CAEOC,GAAG,IAAInB,OAAO,CAACC,GAAR,CAAYkB,GAAZ,CAFd;AAGD,KAtCa;;AAEZ,SAAKP,KAAL,GAAa;AACXP,MAAAA,KAAK,EAAE,EADI;AAEXM,MAAAA,QAAQ,EAAE,EAFC;AAGXS,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAiCDC,EAAAA,MAAM,GAAG;AAAA,UAECV,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACE,MAAA,MAAM,EAAE;AAAEjC,QAAAA;AAAF,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAE,KAAKwB,aAAnC;AAAkD,MAAA,cAAc,EAAE,KAAKM,cAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEG,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAaD;;AA1DyB;;AA8D5B,eAAenC,GAAf","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { callbackify } from 'util';\n\nconst app = new Clarifai.App({\n  apiKey: 'fc0d3c88b1464cdfb2e6b5ef02f6e320'\n });\n\n\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    url: 'path/to/svg.svg'\n  }\n\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}, \n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n\n  }\n\n\n\n  onButtonSubmit = () => {\n    // this.setState({imageUrl: this.state.intput})\n\n    this.setState(\n      (prevState,props)=>{\n          return {imageUrl: this.state.intput};\n       }\n   );\n\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response =>  this.calculateFaceLocation(response))\n    .catch(err => console.log(err))\n  }\n\n  render() {\n\n    const { imageUrl } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={{ particlesOptions }} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={imageUrl}/> \n\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}